// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  uid       String     @unique @default(uuid())
  name      String     @db.VarChar(250)
  email     String     @unique
  password  String     @db.VarChar(250)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  bookCase  BookCase[]

  @@map("users")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  slug      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  books     Book[]

  @@map("categories")
}

model Book {
  id         Int        @id @default(autoincrement())
  title      String     @db.VarChar(255)
  slug       String     @unique @db.VarChar(255)
  image      String     @default("")
  desc       String     @default("")
  author     String     @default("Đang cập nhật") @db.VarChar(100)
  translator String     @default("Đang cập nhật") @db.VarChar(100)
  state      String     @default("") @db.VarChar(100)
  view       Int        @default(0)
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt
  chapters   Chapter[]
  slider     Slider?
  recommend  Recommend?
  bookCase   BookCase[]

  @@fulltext([title])
  @@map("books")
}

model Chapter {
  id            Int        @id @default(autoincrement())
  title         String     @db.VarChar(255)
  chapterNumber Float
  content       String     @default("") @db.Text
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now()) @updatedAt
  bookId        Int
  book          Book       @relation(fields: [bookId], references: [id])
  bookCase      BookCase[]

  @@map("chapters")
}

model Slider {
  id        Int      @id @default(autoincrement())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int      @unique
  bannerImg String   @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Recommend {
  id        Int      @id @default(autoincrement())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model BookCase {
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  bookId    Int
  chapterId Int
  book      Book     @relation(fields: [bookId], references: [id])
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@id([userId, bookId])
}
